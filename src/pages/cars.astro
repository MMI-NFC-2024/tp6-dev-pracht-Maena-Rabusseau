---
import * as Plot from "@observablehq/plot";
import cars from "../assets/cars.json";
import PlotFigure from "../components/PlotFigure.astro";
import Layout from "../layouts/Layout.astro";


const brands = [...new Set(cars.map(c => c.brand))];


const plots = brands.map((brandName) => {


  const filtered = cars.filter(c => c.brand === brandName);


  const plotList = [
    {
      title: `Puissance vs Prix (${brandName})`,
      options: {
        grid: true,
        marks: [
          Plot.dot(filtered, {
            x: "power_hp",
            y: "price_eur",
            fill: "steelblue",
            r: 5,
          }),
        ],
        x: { label: "Puissance (hp)" },
        y: { label: "Prix (â‚¬)" },
      },
    },
  ];
  return { brand: brandName, plots: plotList };
});
---

<Layout/>
  <h1 class="text-3xl font-bold text-center mb-8">
    Graphiques des voitures
  </h1>

  <!-- SLIDER -->
  <div class="flex overflow-x-auto gap-8 snap-x snap-mandatory scroll-smooth p-6">
    {plots.map((plotGroup) => (
      <section class="flex-none w-full snap-start bg-white rounded-2xl shadow-md p-6 text-center">
        <h2 class="text-2xl font-semibold mb-4 text-gray-800">{plotGroup.brand}</h2>

        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {plotGroup.plots.map((plot, i) => (
            <div class="bg-gray-50 rounded-xl p-4 shadow-inner">
              <h3 class="font-medium mb-2 text-gray-700">{plot.title}</h3>
              <PlotFigure options={plot.options} />
            </div>
          ))}
        </div>
      </section>
    ))}
  </div>

